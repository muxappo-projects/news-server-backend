{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [
        {
          "slug": "football",
          "description": "Footie!"
        }
      ]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles",
    "queries": [
      "author",
      "topic",
      "sort_by",
      "order"
    ],
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6
        }
      ]
    }
  },
  "GET /api/articles/:article_id": {
    "description": "serves an article fetched by the given id",
    "queries": [],
    "exampleResponse": {
      "article": {
        "author": "author_name",
        "article_id": 4,
        "title": "article_title",
        "topic": "topic",
        "body": "Article text",
        "created_at": "Date",
        "votes": 6,
        "article_img_url": "url"
      }
    }
  },
  "GET /api/articles/:article_id/comments": {
    "description": "serves an array of comment objects associated with the given article ID",
    "queries": [],
    "exampleResponse": {
      "comments": [
        {
          "comment 1": {},
          "comment 2": {},
          "comment 3": {}
        }
      ]
    }
  },
  "GET /api/users": {
    "description": "serves an array of users",
    "queries": [],
    "exampleResponse": {
      "users": [
        {
          "user 1": {},
          "user 2": {},
          "user 3": {}
        }
      ]
    }
  },
  "POST /api/articles/:article_id/comments": {
    "description": "accepts a comment object containing username and commentBody properties, inserts according to given article id, then serves the created comment on completion",
    "exampleRequestBody": {
      "username": "user",
      "commentBody": "comment text"
    },
    "exampleResponse": {
      "created_comment": {
        "comment_id": 12,
        "body": "comment text",
        "author": "user",
        "article_id": 4,
        "votes": 3,
        "created_at": "date"
      }
    }
  },
  "PATCH /api/articles/:article_id": {
    "description": "accepts a patch object with an inc_votes property to increment the votes on an article, then responds with the updated article",
    "exampleRequestBody": {
      "inc_votes": 2
    },
    "exampleResponse": {
      "updated_article": {
        "article_id": 4,
        "body": "Article text",
        "title": "article_title",
        "topic": "topic",
        "author": "author_name",
        "votes": 5,
        "created_at": "date",
        "article_img_url": "url"
      }
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "deletes the comment by the given comment ID"
  }
}